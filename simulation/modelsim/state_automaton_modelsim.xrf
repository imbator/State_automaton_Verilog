vendor_name = ModelSim
source_file = 1, E:/Cvartus/Projects/Lab6_state_automaton/state_automaton.v
source_file = 1, E:/Cvartus/Projects/Lab6_state_automaton/state_auto_graph.vwf
source_file = 1, E:/Cvartus/Projects/Lab6_state_automaton/automaton_wrap.v
source_file = 1, E:/Cvartus/Projects/Lab6_state_automaton/db/state_automaton.cbx.xml
design_name = automaton_wrap
instance = comp, \KEY[3]~I , KEY[3], automaton_wrap, 1
instance = comp, \SW[0]~I , SW[0], automaton_wrap, 1
instance = comp, \init_1|diods[0]~feeder , init_1|diods[0]~feeder, automaton_wrap, 1
instance = comp, \KEY[0]~I , KEY[0], automaton_wrap, 1
instance = comp, \init_1|diods[0] , init_1|diods[0], automaton_wrap, 1
instance = comp, \init_1|custom_register[0]~feeder , init_1|custom_register[0]~feeder, automaton_wrap, 1
instance = comp, \init_1|custom_register[0] , init_1|custom_register[0], automaton_wrap, 1
instance = comp, \init_1|diods[1]~feeder , init_1|diods[1]~feeder, automaton_wrap, 1
instance = comp, \init_1|diods[1] , init_1|diods[1], automaton_wrap, 1
instance = comp, \init_1|custom_register[1]~feeder , init_1|custom_register[1]~feeder, automaton_wrap, 1
instance = comp, \init_1|custom_register[1] , init_1|custom_register[1], automaton_wrap, 1
instance = comp, \init_1|diods[2]~feeder , init_1|diods[2]~feeder, automaton_wrap, 1
instance = comp, \init_1|diods[2] , init_1|diods[2], automaton_wrap, 1
instance = comp, \init_1|custom_register[2]~feeder , init_1|custom_register[2]~feeder, automaton_wrap, 1
instance = comp, \init_1|custom_register[2] , init_1|custom_register[2], automaton_wrap, 1
instance = comp, \init_1|diods[3] , init_1|diods[3], automaton_wrap, 1
instance = comp, \init_1|custom_register[3] , init_1|custom_register[3], automaton_wrap, 1
instance = comp, \init_1|diods[4]~feeder , init_1|diods[4]~feeder, automaton_wrap, 1
instance = comp, \init_1|diods[4] , init_1|diods[4], automaton_wrap, 1
instance = comp, \init_1|custom_register[4]~feeder , init_1|custom_register[4]~feeder, automaton_wrap, 1
instance = comp, \init_1|custom_register[4] , init_1|custom_register[4], automaton_wrap, 1
instance = comp, \init_1|diods[5] , init_1|diods[5], automaton_wrap, 1
instance = comp, \init_1|custom_register[5] , init_1|custom_register[5], automaton_wrap, 1
instance = comp, \init_1|diods[6] , init_1|diods[6], automaton_wrap, 1
instance = comp, \init_1|custom_register[6] , init_1|custom_register[6], automaton_wrap, 1
instance = comp, \init_1|diods[7]~feeder , init_1|diods[7]~feeder, automaton_wrap, 1
instance = comp, \init_1|diods[7] , init_1|diods[7], automaton_wrap, 1
instance = comp, \init_1|custom_register[7]~feeder , init_1|custom_register[7]~feeder, automaton_wrap, 1
instance = comp, \init_1|custom_register[7] , init_1|custom_register[7], automaton_wrap, 1
instance = comp, \init_1|diods[8]~feeder , init_1|diods[8]~feeder, automaton_wrap, 1
instance = comp, \init_1|diods[8] , init_1|diods[8], automaton_wrap, 1
instance = comp, \init_1|custom_register[8]~feeder , init_1|custom_register[8]~feeder, automaton_wrap, 1
instance = comp, \init_1|custom_register[8] , init_1|custom_register[8], automaton_wrap, 1
instance = comp, \init_1|diods[9]~feeder , init_1|diods[9]~feeder, automaton_wrap, 1
instance = comp, \init_1|diods[9] , init_1|diods[9], automaton_wrap, 1
instance = comp, \init_1|Mux2~0 , init_1|Mux2~0, automaton_wrap, 1
instance = comp, \init_1|currentState[0] , init_1|currentState[0], automaton_wrap, 1
instance = comp, \init_1|Mux1~0 , init_1|Mux1~0, automaton_wrap, 1
instance = comp, \init_1|currentState[1] , init_1|currentState[1], automaton_wrap, 1
instance = comp, \init_1|Mux0~0 , init_1|Mux0~0, automaton_wrap, 1
instance = comp, \init_1|currentState[2] , init_1|currentState[2], automaton_wrap, 1
instance = comp, \init_1|Equal0~0 , init_1|Equal0~0, automaton_wrap, 1
instance = comp, \KEY[1]~I , KEY[1], automaton_wrap, 1
instance = comp, \KEY[2]~I , KEY[2], automaton_wrap, 1
instance = comp, \LEDR[0]~I , LEDR[0], automaton_wrap, 1
instance = comp, \LEDR[1]~I , LEDR[1], automaton_wrap, 1
instance = comp, \LEDR[2]~I , LEDR[2], automaton_wrap, 1
instance = comp, \LEDR[3]~I , LEDR[3], automaton_wrap, 1
instance = comp, \LEDR[4]~I , LEDR[4], automaton_wrap, 1
instance = comp, \LEDR[5]~I , LEDR[5], automaton_wrap, 1
instance = comp, \LEDR[6]~I , LEDR[6], automaton_wrap, 1
instance = comp, \LEDR[7]~I , LEDR[7], automaton_wrap, 1
instance = comp, \LEDR[8]~I , LEDR[8], automaton_wrap, 1
instance = comp, \LEDR[9]~I , LEDR[9], automaton_wrap, 1
instance = comp, \HEX3[0]~I , HEX3[0], automaton_wrap, 1
instance = comp, \HEX3[1]~I , HEX3[1], automaton_wrap, 1
instance = comp, \HEX3[2]~I , HEX3[2], automaton_wrap, 1
instance = comp, \HEX3[3]~I , HEX3[3], automaton_wrap, 1
instance = comp, \HEX3[4]~I , HEX3[4], automaton_wrap, 1
instance = comp, \HEX3[5]~I , HEX3[5], automaton_wrap, 1
instance = comp, \HEX3[6]~I , HEX3[6], automaton_wrap, 1
instance = comp, \HEX3[7]~I , HEX3[7], automaton_wrap, 1
instance = comp, \HEX2[0]~I , HEX2[0], automaton_wrap, 1
instance = comp, \HEX2[1]~I , HEX2[1], automaton_wrap, 1
instance = comp, \HEX2[2]~I , HEX2[2], automaton_wrap, 1
instance = comp, \HEX2[3]~I , HEX2[3], automaton_wrap, 1
instance = comp, \HEX2[4]~I , HEX2[4], automaton_wrap, 1
instance = comp, \HEX2[5]~I , HEX2[5], automaton_wrap, 1
instance = comp, \HEX2[6]~I , HEX2[6], automaton_wrap, 1
instance = comp, \HEX2[7]~I , HEX2[7], automaton_wrap, 1
instance = comp, \HEX1[0]~I , HEX1[0], automaton_wrap, 1
instance = comp, \HEX1[1]~I , HEX1[1], automaton_wrap, 1
instance = comp, \HEX1[2]~I , HEX1[2], automaton_wrap, 1
instance = comp, \HEX1[3]~I , HEX1[3], automaton_wrap, 1
instance = comp, \HEX1[4]~I , HEX1[4], automaton_wrap, 1
instance = comp, \HEX1[5]~I , HEX1[5], automaton_wrap, 1
instance = comp, \HEX1[6]~I , HEX1[6], automaton_wrap, 1
instance = comp, \HEX1[7]~I , HEX1[7], automaton_wrap, 1
instance = comp, \HEX0[0]~I , HEX0[0], automaton_wrap, 1
instance = comp, \HEX0[1]~I , HEX0[1], automaton_wrap, 1
instance = comp, \HEX0[2]~I , HEX0[2], automaton_wrap, 1
instance = comp, \HEX0[3]~I , HEX0[3], automaton_wrap, 1
instance = comp, \HEX0[4]~I , HEX0[4], automaton_wrap, 1
instance = comp, \HEX0[5]~I , HEX0[5], automaton_wrap, 1
instance = comp, \HEX0[6]~I , HEX0[6], automaton_wrap, 1
instance = comp, \HEX0[7]~I , HEX0[7], automaton_wrap, 1
instance = comp, \CLOCK_50~I , CLOCK_50, automaton_wrap, 1
instance = comp, \LEDG[0]~I , LEDG[0], automaton_wrap, 1
instance = comp, \LEDG[1]~I , LEDG[1], automaton_wrap, 1
instance = comp, \LEDG[2]~I , LEDG[2], automaton_wrap, 1
instance = comp, \LEDG[3]~I , LEDG[3], automaton_wrap, 1
instance = comp, \LEDG[4]~I , LEDG[4], automaton_wrap, 1
instance = comp, \LEDG[5]~I , LEDG[5], automaton_wrap, 1
instance = comp, \LEDG[6]~I , LEDG[6], automaton_wrap, 1
instance = comp, \LEDG[7]~I , LEDG[7], automaton_wrap, 1
