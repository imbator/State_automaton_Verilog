|automaton_wrap
SW[0] => SW[0].IN1
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => KEY[3].IN1
LEDR[0] <= state_automaton:init_1.port5
LEDR[1] <= state_automaton:init_1.port5
LEDR[2] <= state_automaton:init_1.port5
LEDR[3] <= state_automaton:init_1.port5
LEDR[4] <= state_automaton:init_1.port5
LEDR[5] <= state_automaton:init_1.port5
LEDR[6] <= state_automaton:init_1.port5
LEDR[7] <= state_automaton:init_1.port5
LEDR[8] <= state_automaton:init_1.port5
LEDR[9] <= state_automaton:init_1.port5
HEX3[0] <= state_automaton:init_1.port6
HEX3[1] <= state_automaton:init_1.port6
HEX3[2] <= state_automaton:init_1.port6
HEX3[3] <= state_automaton:init_1.port6
HEX3[4] <= state_automaton:init_1.port6
HEX3[5] <= state_automaton:init_1.port6
HEX3[6] <= state_automaton:init_1.port6
HEX3[7] <= state_automaton:init_1.port6
HEX2[0] <= state_automaton:init_1.port7
HEX2[1] <= state_automaton:init_1.port7
HEX2[2] <= state_automaton:init_1.port7
HEX2[3] <= state_automaton:init_1.port7
HEX2[4] <= state_automaton:init_1.port7
HEX2[5] <= state_automaton:init_1.port7
HEX2[6] <= state_automaton:init_1.port7
HEX2[7] <= state_automaton:init_1.port7
HEX1[0] <= state_automaton:init_1.port8
HEX1[1] <= state_automaton:init_1.port8
HEX1[2] <= state_automaton:init_1.port8
HEX1[3] <= state_automaton:init_1.port8
HEX1[4] <= state_automaton:init_1.port8
HEX1[5] <= state_automaton:init_1.port8
HEX1[6] <= state_automaton:init_1.port8
HEX1[7] <= state_automaton:init_1.port8
HEX0[0] <= state_automaton:init_1.port9
HEX0[1] <= state_automaton:init_1.port9
HEX0[2] <= state_automaton:init_1.port9
HEX0[3] <= state_automaton:init_1.port9
HEX0[4] <= state_automaton:init_1.port9
HEX0[5] <= state_automaton:init_1.port9
HEX0[6] <= state_automaton:init_1.port9
HEX0[7] <= state_automaton:init_1.port9
CLOCK_50 => CLOCK_50.IN1
LEDG[0] <= state_automaton:init_1.port4
LEDG[1] <= state_automaton:init_1.port4
LEDG[2] <= state_automaton:init_1.port4
LEDG[3] <= state_automaton:init_1.port4
LEDG[4] <= state_automaton:init_1.port4
LEDG[5] <= state_automaton:init_1.port4
LEDG[6] <= state_automaton:init_1.port4
LEDG[7] <= state_automaton:init_1.port4


|automaton_wrap|state_automaton:init_1
x => diods[0]~reg0.DATAIN
x => custom_register[0]~reg0.DATAIN
x => Mux2.IN4
x => Mux1.IN6
x => Mux2.IN5
x => Mux0.IN6
x => Mux2.IN6
x => Mux0.IN7
x => Mux1.IN7
x => Mux2.IN7
x => Mux0.IN4
x => Mux1.IN4
x => Mux0.IN5
x => Mux1.IN5
rst => diods[0]~reg0.ACLR
rst => diods[1]~reg0.ACLR
rst => diods[2]~reg0.ACLR
rst => diods[3]~reg0.ACLR
rst => diods[4]~reg0.ACLR
rst => diods[5]~reg0.ACLR
rst => diods[6]~reg0.ACLR
rst => diods[7]~reg0.ACLR
rst => diods[8]~reg0.ACLR
rst => diods[9]~reg0.ACLR
rst => custom_register[0]~reg0.ACLR
rst => custom_register[1]~reg0.ACLR
rst => custom_register[2]~reg0.ACLR
rst => custom_register[3]~reg0.ACLR
rst => custom_register[4]~reg0.ACLR
rst => custom_register[5]~reg0.ACLR
rst => custom_register[6]~reg0.ACLR
rst => custom_register[7]~reg0.ACLR
rst => custom_register[8]~reg0.ACLR
rst => custom_register[9]~reg0.ACLR
rst => currentState[0]~reg0.ACLR
rst => currentState[1]~reg0.ACLR
rst => currentState[2]~reg0.ACLR
shift => diods[0]~reg0.CLK
shift => diods[1]~reg0.CLK
shift => diods[2]~reg0.CLK
shift => diods[3]~reg0.CLK
shift => diods[4]~reg0.CLK
shift => diods[5]~reg0.CLK
shift => diods[6]~reg0.CLK
shift => diods[7]~reg0.CLK
shift => diods[8]~reg0.CLK
shift => diods[9]~reg0.CLK
shift => custom_register[0]~reg0.CLK
shift => custom_register[1]~reg0.CLK
shift => custom_register[2]~reg0.CLK
shift => custom_register[3]~reg0.CLK
shift => custom_register[4]~reg0.CLK
shift => custom_register[5]~reg0.CLK
shift => custom_register[6]~reg0.CLK
shift => custom_register[7]~reg0.CLK
shift => custom_register[8]~reg0.CLK
shift => custom_register[9]~reg0.CLK
shift => currentState[0]~reg0.CLK
shift => currentState[1]~reg0.CLK
shift => currentState[2]~reg0.CLK
CLOCK_50 => ~NO_FANOUT~
y[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
diods[0] <= diods[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[1] <= diods[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[2] <= diods[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[3] <= diods[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[4] <= diods[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[5] <= diods[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[6] <= diods[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[7] <= diods[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[8] <= diods[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
diods[9] <= diods[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= <VCC>
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= <VCC>
HEX3[4] <= <VCC>
HEX3[5] <= <VCC>
HEX3[6] <= <VCC>
HEX3[7] <= <GND>
HEX2[0] <= <VCC>
HEX2[1] <= <VCC>
HEX2[2] <= <VCC>
HEX2[3] <= <VCC>
HEX2[4] <= <VCC>
HEX2[5] <= <VCC>
HEX2[6] <= <VCC>
HEX2[7] <= <GND>
HEX1[0] <= <VCC>
HEX1[1] <= <VCC>
HEX1[2] <= <VCC>
HEX1[3] <= <VCC>
HEX1[4] <= <VCC>
HEX1[5] <= <VCC>
HEX1[6] <= <VCC>
HEX1[7] <= <GND>
HEX0[0] <= <VCC>
HEX0[1] <= <VCC>
HEX0[2] <= <VCC>
HEX0[3] <= <VCC>
HEX0[4] <= <VCC>
HEX0[5] <= <VCC>
HEX0[6] <= <VCC>
HEX0[7] <= <GND>
currentState[0] <= currentState[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentState[1] <= currentState[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentState[2] <= currentState[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[0] <= custom_register[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[1] <= custom_register[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[2] <= custom_register[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[3] <= custom_register[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[4] <= custom_register[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[5] <= custom_register[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[6] <= custom_register[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[7] <= custom_register[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[8] <= custom_register[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
custom_register[9] <= custom_register[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


